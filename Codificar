import java.util.ArrayList;
import java.util.PriorityQueue;
import java.util.Set;
/*Universidad del Valle de Guatemala
Hoja de trabajo #7
Michelle Bartra - 14
Betti Rodas - 14204
*/
public  class Codificar{
    private ArrayList <Object> entrada =  new ArrayList();
    int n=0;
	
    public  String separoLetras(String mensaje){
        for (int i=0; i< mensaje.length(); i++){
            char caracter = mensaje.charAt(i); 
             n= n+ PruebaisNumber(caracter);}
             if (n>0){
                 n=0;
             return "Esto no es una letra!!, vuelva a ingresar un mensaje sin numeros";
             }
             else{
                 n=0;
             return "Procesaremos su mensaje";}
	}
        
        private static int PruebaisNumber(char caracter){
            try{
            Integer.parseInt(String.valueOf(caracter));
            return 1; // si lo es no manda un true
        } catch (NumberFormatException e){
            return 0;// si no lo es lo agarra el exception y nos manda false
        }
    }

    public Tree ArmoArbol(int[] frecuenciadeCr){
    PriorityQueue<Tree> arboles = new PriorityQueue<Tree>();
        for (int i = 0; i < frecuenciadeCr.length; i++)
            if (frecuenciadeCr[i] > 0)
                arboles.offer(new Leaf(frecuenciadeCr[i], (char)i));
        assert arboles.size() > 0;
        while (arboles.size() > 1) {
            Tree a = arboles.poll();
            Tree b = arboles.poll();
            arboles.offer(new Nodo(a, b));
        }
        return arboles.poll();}
    
    public void printCodes(Tree arbol, StringBuffer pre) {
        assert arbol != null;
        if (arbol instanceof Leaf) {
            Leaf leaf = (Leaf)arbol;
            System.out.println(leaf.value + "       \t" + leaf.frecuencia + "       \t" + pre);
              
        } else if (arbol instanceof Nodo) {
            Nodo node = (Nodo)arbol;
            pre.append('0');
            printCodes(node.left, pre);
            pre.deleteCharAt(pre.length()-1);
            pre.append('1');
            printCodes(node.right, pre);
            pre.deleteCharAt(pre.length()-1);
        }
    }
    
}

